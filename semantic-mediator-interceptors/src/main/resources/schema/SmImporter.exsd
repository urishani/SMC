<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.ibm.dm.frontServices.sm" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="com.ibm.dm.frontServices.sm" id="SmMediator" name="SM Mediator Interceptor"/>
      </appinfo>
      <documentation>
         Semantic Mediation Mediator is an Interceptor class to be used in configuring mediation networks.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="ImporterClass"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="ImporterClass">
      <annotation>
         <documentation>
            Java class implementing an importer agent that can import models into the SMC.
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="UiParams"/>
         </sequence>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  Descriptive name of the interceptor
               </documentation>
            </annotation>
         </attribute>
         <attribute name="description" type="string">
            <annotation>
               <documentation>
                  Description of the mediator algorithm, dependencies and rules provisioning type.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  An Importer is an agent of the SMC which imports data from files or tools (such as OSLC service providers), and which acts on behalf of these data sources to push the models imported from them into the SMC.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":com.ibm.dm.frontService.sm.intfc.ISmImporterIntercept"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="requiresLicense" type="boolean">
            <annotation>
               <documentation>
                  Indicates whether the interceptor requires a license, in which case, when configuring it - a pop-up window will require the user to agree to use it only legally via an enforceable license, or voluntarily with unenforceable agreement.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="licenseText" type="string">
            <annotation>
               <documentation>
                  Text to be displayed to a user when having a choice to select a licensed mediator to which she will accept by clicking the YES (or OK) button.
To include line breaks, use the sequence \n (backslash n).
Do not use the &lt; and character.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="UiParams">
      <annotation>
         <documentation>
            Parameters to be provided to this interceptor from the container.
These are aprameters that the GUI container must respect and provide before the interceptor is called, or when it is constructed.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="displayName" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="isHidden" type="boolean">
            <annotation>
               <documentation>
                  Indicates whether the field is a password and should be hidden in the GUI. Default is: false.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="description" type="string">
            <annotation>
               <documentation>
                  Description of the UI param
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="isConfigParam" type="boolean">
            <annotation>
               <documentation>
                  Specifies whether the parameter should be provided as part of the importer configuration, or as part of the importer execution.
Default is &quot;false&quot;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="isFileName" type="string">
            <annotation>
               <documentation>
                  Indicates whether the parameter is a file name. Default is &quot;false&quot;.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
